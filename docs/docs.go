// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/customers": {
            "get": {
                "description": "Retorna los datos del cliente identificado por el customer_id contenido en el token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Obtiene la información del cliente autenticado",
                "responses": {
                    "200": {
                        "description": "Datos del cliente",
                        "schema": {
                            "$ref": "#/definitions/customers.CustomerResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Registrar un nuevo cliente en el sistema con los datos proporcionados. Valida campos obligatorios como nombre, teléfono y contraseña.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Registrar un nuevo cliente",
                "parameters": [
                    {
                        "description": "Datos del cliente",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customers.RegisterCustomer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "customer successfully registered",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Se retorna cuando hay un campo que no cumple con los requisitos o directamente el body se envía vacío.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Se retorna cuando ocurre un error inexperado en el servidor.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customers/address": {
            "get": {
                "description": "Retorna un arreglo con todas las direcciones asociadas al cliente identificado en el token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers Address"
                ],
                "summary": "Obtiene todas las direcciones del cliente autenticado",
                "responses": {
                    "200": {
                        "description": "Lista de direcciones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/customers.Address"
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Registra una dirección asociada al customer_id obtenido del contexto",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers Address"
                ],
                "summary": "Registra una nueva dirección para el cliente autenticado",
                "parameters": [
                    {
                        "description": "Datos de la dirección",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customers.Address"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "address registred",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error de validación o parseo",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customers/address/{address}": {
            "delete": {
                "security": [
                    {
                        "SessionCookie": []
                    }
                ],
                "description": "Elimina la dirección especificada por su ID, siempre que pertenezca al cliente autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers Address"
                ],
                "summary": "Elimina una dirección del cliente autenticado",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la dirección (UUID)",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "address deleted success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/adiciones": {
            "get": {
                "description": "Devuelve la lista de adiciones filtradas por el ID de la categoría a la que pertenece un producto.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Se obtienen las adiciones por categoría.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la categoría (UUID)",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Items"
                            }
                        }
                    },
                    "400": {
                        "description": "Se retorna cuando el param se envía vacío o no es un UUID Valido.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Se retorna cuando no se encuentran ninguna adición para el category_id enviada.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Se retorna cuando ocurre un error inesperado dentro del servidor.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products/category": {
            "get": {
                "description": "Se obtiene una lista de productos filtradas por el nombre de una categoria, tambien puede ser una similitud, ej:Si se busca la palabra hamb, obtendrá hamburguesas o otra categoría similar.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Se obtienen todos los productos de una misma categoria.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Este es el nombre de la categoria ej:/products/category/?category=hamburguesas",
                        "name": "category",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Items"
                            }
                        }
                    },
                    "400": {
                        "description": "Se retorna cuando cuando el valor es vacio o el valor es menor a 3 digitos.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Se retorna cuando no se encuentra una concidencia en la busqueda.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Se retorna cuando ocurre un error inexperado en el servidor.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shops": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops"
                ],
                "summary": "End Point para obtener un negocio con todos sus products, se debe enviar alguno de los 2 query params requeridos.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Este es el ID del negocio, viene en formato UUID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Este es el tag del negocio .ej:dmo",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsShops"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/shops/all": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shops"
                ],
                "summary": "Para que no me fastidies de cual es la ruta",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ShopResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "customers.Address": {
            "type": "object",
            "required": [
                "address",
                "alias",
                "coords",
                "reference"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Calle 123 # 45-67"
                },
                "alias": {
                    "type": "string",
                    "example": "Casa principal"
                },
                "coords": {
                    "$ref": "#/definitions/customers.Cords"
                },
                "id": {
                    "type": "string"
                },
                "reference": {
                    "type": "string",
                    "example": "Frente al parque de los niños"
                }
            }
        },
        "customers.Cords": {
            "type": "object",
            "required": [
                "lat",
                "long"
            ],
            "properties": {
                "lat": {
                    "type": "number",
                    "example": 4.60971
                },
                "long": {
                    "type": "number",
                    "example": -74.08175
                }
            }
        },
        "customers.CustomerResponse": {
            "type": "object",
            "required": [
                "birthday_date",
                "name",
                "phone",
                "sur_name"
            ],
            "properties": {
                "birthday_date": {
                    "type": "string",
                    "example": "1990-05-20"
                },
                "email": {
                    "type": "string",
                    "example": "carlos.ramirez@example.com"
                },
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Carlos"
                },
                "phone": {
                    "type": "string",
                    "example": "+573001112233"
                },
                "sur_name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Ramírez"
                }
            }
        },
        "customers.RegisterCustomer": {
            "type": "object",
            "required": [
                "birthday_date",
                "name",
                "password",
                "phone",
                "sur_name"
            ],
            "properties": {
                "birthday_date": {
                    "type": "string",
                    "example": "1990-05-20"
                },
                "email": {
                    "type": "string",
                    "example": "carlos.ramirez@example.com"
                },
                "name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Carlos"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "claveSegura123"
                },
                "phone": {
                    "type": "string",
                    "example": "+573001112233"
                },
                "sur_name": {
                    "type": "string",
                    "minLength": 3,
                    "example": "Ramírez"
                }
            }
        },
        "dto.ShopResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "home_phone": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opened": {
                    "type": "boolean"
                },
                "score": {
                    "type": "number"
                },
                "tag": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Categories": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Items"
                    }
                },
                "name": {
                    "type": "string"
                },
                "shop_id": {
                    "type": "string"
                }
            }
        },
        "models.Items": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                },
                "shop": {
                    "$ref": "#/definitions/models.ProductsShops"
                },
                "shop_id": {
                    "type": "string"
                }
            }
        },
        "models.ProductsShops": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Categories"
                    }
                },
                "id": {
                    "type": "string"
                },
                "logo_image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opened": {
                    "type": "boolean"
                },
                "score": {
                    "type": "number"
                },
                "tag": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.1",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Documentation API CaliYa",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
