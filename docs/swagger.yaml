basePath: /api
definitions:
  customers.Address:
    properties:
      address:
        example: 'Calle 123 # 45-67'
        type: string
      alias:
        example: Casa principal
        type: string
      coords:
        $ref: '#/definitions/customers.Cords'
      id:
        type: string
      reference:
        example: Frente al parque de los niños
        type: string
    required:
    - address
    - alias
    - coords
    - reference
    type: object
  customers.Cords:
    properties:
      lat:
        example: 4.60971
        type: number
      long:
        example: -74.08175
        type: number
    required:
    - lat
    - long
    type: object
  customers.CustomerResponse:
    properties:
      birthday_date:
        example: "1990-05-20"
        type: string
      email:
        example: carlos.ramirez@example.com
        type: string
      name:
        example: Carlos
        minLength: 3
        type: string
      phone:
        example: "+573001112233"
        type: string
      sur_name:
        example: Ramírez
        minLength: 3
        type: string
    required:
    - birthday_date
    - name
    - phone
    - sur_name
    type: object
  customers.RegisterCustomer:
    properties:
      birthday_date:
        example: "1990-05-20"
        type: string
      email:
        example: carlos.ramirez@example.com
        type: string
      name:
        example: Carlos
        minLength: 3
        type: string
      password:
        example: claveSegura123
        minLength: 8
        type: string
      phone:
        example: "+573001112233"
        type: string
      sur_name:
        example: Ramírez
        minLength: 3
        type: string
    required:
    - birthday_date
    - name
    - password
    - phone
    - sur_name
    type: object
  dto.ShopResponse:
    properties:
      address:
        type: string
      home_phone:
        type: string
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      opened:
        type: boolean
      score:
        type: number
      tag:
        type: string
      type:
        type: string
    type: object
  models.Categories:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/models.Items'
        type: array
      name:
        type: string
      shop_id:
        type: string
    type: object
  models.Items:
    properties:
      description:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      score:
        type: integer
      shop:
        $ref: '#/definitions/models.ProductsShops'
      shop_id:
        type: string
    type: object
  models.ProductsShops:
    properties:
      address:
        type: string
      categories:
        items:
          $ref: '#/definitions/models.Categories'
        type: array
      id:
        type: string
      logo_image:
        type: string
      name:
        type: string
      opened:
        type: boolean
      score:
        type: number
      tag:
        type: string
    type: object
info:
  contact: {}
  title: Documentation API CaliYa
  version: 1.0.1
paths:
  /customers:
    get:
      description: Retorna los datos del cliente identificado por el customer_id contenido
        en el token
      produces:
      - application/json
      responses:
        "200":
          description: Datos del cliente
          schema:
            $ref: '#/definitions/customers.CustomerResponse'
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: unexpected error
          schema:
            type: string
      summary: Obtiene la información del cliente autenticado
      tags:
      - Customers
    post:
      consumes:
      - application/json
      description: Registrar un nuevo cliente en el sistema con los datos proporcionados.
        Valida campos obligatorios como nombre, teléfono y contraseña.
      parameters:
      - description: Datos del cliente
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/customers.RegisterCustomer'
      responses:
        "201":
          description: customer successfully registered
          schema:
            type: string
        "400":
          description: Se retorna cuando hay un campo que no cumple con los requisitos
            o directamente el body se envía vacío.
          schema:
            type: string
        "500":
          description: Se retorna cuando ocurre un error inexperado en el servidor.
          schema:
            type: string
      summary: Registrar un nuevo cliente
      tags:
      - Customers
  /customers/address:
    get:
      description: Retorna un arreglo con todas las direcciones asociadas al cliente
        identificado en el token
      produces:
      - application/json
      responses:
        "200":
          description: Lista de direcciones
          schema:
            items:
              $ref: '#/definitions/customers.Address'
            type: array
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: unexpected error
          schema:
            type: string
      summary: Obtiene todas las direcciones del cliente autenticado
      tags:
      - Customers Address
    post:
      consumes:
      - application/json
      description: Registra una dirección asociada al customer_id obtenido del contexto
      parameters:
      - description: Datos de la dirección
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/customers.Address'
      produces:
      - application/json
      responses:
        "201":
          description: address registred
          schema:
            type: string
        "400":
          description: error de validación o parseo
          schema:
            type: string
        "500":
          description: unexpected error
          schema:
            type: string
      summary: Registra una nueva dirección para el cliente autenticado
      tags:
      - Customers Address
  /products/adiciones:
    get:
      description: Devuelve la lista de adiciones filtradas por el ID de la categoría
        a la que pertenece un producto.
      parameters:
      - description: ID de la categoría (UUID)
        in: query
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Items'
            type: array
        "400":
          description: Se retorna cuando el param se envía vacío o no es un UUID Valido.
          schema:
            type: string
        "404":
          description: Se retorna cuando no se encuentran ninguna adición para el
            category_id enviada.
          schema:
            type: string
        "500":
          description: Se retorna cuando ocurre un error inesperado dentro del servidor.
          schema:
            type: string
      summary: Se obtienen las adiciones por categoría.
      tags:
      - Products
  /products/category:
    get:
      description: Se obtiene una lista de productos filtradas por el nombre de una
        categoria, tambien puede ser una similitud, ej:Si se busca la palabra hamb,
        obtendrá hamburguesas o otra categoría similar.
      parameters:
      - description: Este es el nombre de la categoria ej:/products/category/?category=hamburguesas
        in: query
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Items'
            type: array
        "400":
          description: Se retorna cuando cuando el valor es vacio o el valor es menor
            a 3 digitos.
          schema:
            type: string
        "404":
          description: Se retorna cuando no se encuentra una concidencia en la busqueda.
          schema:
            type: string
        "500":
          description: Se retorna cuando ocurre un error inexperado en el servidor.
          schema:
            type: string
      summary: Se obtienen todos los productos de una misma categoria.
      tags:
      - Products
  /shops:
    get:
      parameters:
      - description: Este es el ID del negocio, viene en formato UUID
        in: query
        name: id
        type: string
      - description: Este es el tag del negocio .ej:dmo
        in: query
        name: tag
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductsShops'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: End Point para obtener un negocio con todos sus products, se debe enviar
        alguno de los 2 query params requeridos.
      tags:
      - Shops
  /shops/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ShopResponse'
            type: array
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Para que no me fastidies de cual es la ruta
      tags:
      - Shops
schemes:
- http
swagger: "2.0"
